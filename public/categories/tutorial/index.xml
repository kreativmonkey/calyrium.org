<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Calyrium.org</title>
    <link>localhost/categories/tutorial/</link>
    <description>Recent content in Tutorial on Calyrium.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <managingEditor>admin@calyrium.org (Sebastian Preisner)</managingEditor>
    <webMaster>admin@calyrium.org (Sebastian Preisner)</webMaster>
    <copyright>Copyright 2016 calyrium.org</copyright>
    <lastBuildDate>Sun, 22 May 2016 12:16:00 +0000</lastBuildDate>
    <atom:link href="localhost/categories/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Install Invoiceninja Archlinux with Nginx</title>
      <link>/localhost/post/install-invoiceninja-archlinux-nginx/</link>
      <pubDate>Sun, 22 May 2016 12:16:00 +0000</pubDate>
      <author>admin@calyrium.org (Sebastian Preisner)</author>
      <guid>/localhost/post/install-invoiceninja-archlinux-nginx/</guid>
      <description>

&lt;p&gt;In this tutorial i’ll see how to install Invoice Ninja on a Arch Linux VPS with MariaDB, PHP-FPM and Nginx. Invoice Ninja is a free, open-source solution for invoicing and billing customers and it’s based on Laravel framework.&lt;/p&gt;

&lt;h2 id=&#34;installing-required-software:d35f1845b52303c388554e725b683ac8&#34;&gt;Installing Required Software&lt;/h2&gt;

&lt;p&gt;First you must Login to your System via SSH:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh user@myVPS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;php-fpm&lt;/li&gt;
&lt;li&gt;php-mcrypt&lt;/li&gt;
&lt;li&gt;php-gd&lt;/li&gt;
&lt;li&gt;php-composer&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;openssl&lt;/li&gt;
&lt;li&gt;mariadb&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First update the system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -Syu
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setup-mariadb:d35f1845b52303c388554e725b683ac8&#34;&gt;Setup MariaDB&lt;/h2&gt;

&lt;p&gt;Installing MariaDB (&lt;a href=&#34;https://wiki.archlinux.org/index.php/MySQL#Installation&#34;&gt;More Information on Archlinux.org&lt;/a&gt;
):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S mariadb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the installation is complete, run the following command to secure your installation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, we need to create a database for our Invoice Ninja instance.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u root -p
MariaDB [(none)]&amp;gt; CREATE DATABASE ininja;
MariaDB [(none)]&amp;gt; GRANT ALL PRIVILEGES ON ininja.* TO &#39;ininjauser&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;ininjauser_passwd&#39;;
MariaDB [(none)]&amp;gt; FLUSH PRIVILEGES;
MariaDB [(none)]&amp;gt; \q
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-and-configure-php-and-nginx:d35f1845b52303c388554e725b683ac8&#34;&gt;Install and configure PHP and Nginx&lt;/h2&gt;

&lt;p&gt;You should install Nginx, PHP and all necessary extensions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S nginx php php-mcrypt php-gd php-composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uncomment the following Modules for PHP &lt;code&gt;vim /etc/php/php.ini&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;extension=curl.so
extension=gd.so
extension=gmp.so
extension=iconv.so 
extension=mcrypt.so 
extension=pdo_mysql.so
extension=zip.so
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-nginx:d35f1845b52303c388554e725b683ac8&#34;&gt;Setup Nginx&lt;/h3&gt;

&lt;p&gt;Generate SSL certificate:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /etc/nginx/ssl
&lt;span style=&#34;color: #007020&#34;&gt;cd&lt;/span&gt; /etc/nginx/ssl
openssl genrsa -des3 -passout pass:x -out ininja.pass.key 2048
openssl rsa -passin pass:x -in ininja.pass.key -out ininja.key
rm ininja.pass.key
openssl req -new -key ininja.key -out ininja.csr
openssl x509 -req -days &lt;span style=&#34;color: #40a070&#34;&gt;365&lt;/span&gt; -in ininja.csr -signkey ininja.key -out ininja.crt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a new Nginx Serverblock &lt;code&gt;vim /etc/nginx/sites-availeble/invoiceninja&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;server&lt;/span&gt; {
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;listen&lt;/span&gt;  &lt;span style=&#34;color: #40a070&#34;&gt;80&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;listen&lt;/span&gt;  &lt;span style=&#34;color: #4070a0&#34;&gt;[::]:80&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;ipv6only=on&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;my_invoiceninja.domain.tld&lt;/span&gt;;
    
    &lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;# Return all requests to https&lt;/span&gt;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;return&lt;/span&gt;  &lt;span style=&#34;color: #4070a0&#34;&gt;https://&lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;$host$request_uri&lt;/span&gt;;
}
&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;server&lt;/span&gt; {
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;listen&lt;/span&gt;  &lt;span style=&#34;color: #40a070&#34;&gt;443&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;listen&lt;/span&gt;  &lt;span style=&#34;color: #4070a0&#34;&gt;[::]:443&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;ipv6only=on&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;my_invoiceninja.domain.tld&lt;/span&gt;;
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;on&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_certificate&lt;/span&gt;     &lt;span style=&#34;color: #4070a0&#34;&gt;/etc/nginx/ssl/ininja.crt&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_certificate_key&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;/etc/nginx/ssl/ininja.key&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_session_timeout&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;5m&lt;/span&gt;;

    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_ciphers&lt;/span&gt;                 &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;AES128+EECDH:AES128+EDH:!aNULL&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_protocols&lt;/span&gt;               &lt;span style=&#34;color: #4070a0&#34;&gt;TLSv1&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;TLSv1.1&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;TLSv1.2&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ssl_prefer_server_ciphers&lt;/span&gt;   &lt;span style=&#34;color: #60add5&#34;&gt;on&lt;/span&gt;;
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;charset&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;utf-8&lt;/span&gt;; 
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;root&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;/srv/http/your_ninja_site/public&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;index.php&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;index.htm&lt;/span&gt;;
    
    &lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;## Invoiceninja Settings&lt;/span&gt;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;/&lt;/span&gt; {
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;try_files&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;$uri&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;$uri/&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;/index.php?&lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;$query_string&lt;/span&gt;;
    }
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;location&lt;/span&gt; = &lt;span style=&#34;color: #4070a0&#34;&gt;/favicon.ico&lt;/span&gt; { &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;access_log&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;off&lt;/span&gt;; &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;log_not_found&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;off&lt;/span&gt;; }
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;location&lt;/span&gt; = &lt;span style=&#34;color: #4070a0&#34;&gt;/robots.txt&lt;/span&gt;  { &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;access_log&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;off&lt;/span&gt;; &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;log_not_found&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;off&lt;/span&gt;; }
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;access_log&lt;/span&gt;  &lt;span style=&#34;color: #4070a0&#34;&gt;/var/log/nginx/ininja.access.log&lt;/span&gt;;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;error_log&lt;/span&gt;   &lt;span style=&#34;color: #4070a0&#34;&gt;/var/log/nginx/ininja.error.log&lt;/span&gt;;
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;sendfile&lt;/span&gt; &lt;span style=&#34;color: #60add5&#34;&gt;off&lt;/span&gt;;
    
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;location&lt;/span&gt; ~ &lt;span style=&#34;color: #235388&#34;&gt;/\.ht&lt;/span&gt; {
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;deny&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;all&lt;/span&gt;; 
    }
    
    &lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;## FastCGI Setting&lt;/span&gt;
    &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;location&lt;/span&gt; ~ &lt;span style=&#34;color: #235388&#34;&gt;\.php$&lt;/span&gt; {
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;^(.+\.php)(/.+)&lt;/span&gt;$;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;(!-f&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;$document_root$fastcgi_script_name&lt;/span&gt;&lt;span style=&#34;color: #4070a0&#34;&gt;)&lt;/span&gt; {
            &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;404&lt;/span&gt;;
        }
        &lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;# NOTE: You should have &amp;quot;cgi.fix_pathinfo = 0;&amp;quot; in php.ini&lt;/span&gt;
        
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_pass&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;unix:/run/php-fpm/php-fpm.sock&lt;/span&gt;;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_read_timeout&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;30m&lt;/span&gt;;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_param&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;PATH_INFO&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;$fastcgi_path_info&lt;/span&gt;;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_param&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;SCRIPT_FILENAME&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;$document_root$fastcgi_script_name&lt;/span&gt;;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;fastcgi_index&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;index.php&lt;/span&gt;;
        &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;/etc/nginx/fastcgi_params&lt;/span&gt;;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Activate the server block by creating a symbolic link:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;ln -s /etc/nginx/sites-available/your_ininja_site /etc/nginx/sites-enabled/your_ininja_site
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;h3 id=&#34;enable-php-and-nginx:d35f1845b52303c388554e725b683ac8&#34;&gt;Enable PHP and Nginx&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;systemctl start php-fpm
systemctl start nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-invoice-ninja:d35f1845b52303c388554e725b683ac8&#34;&gt;Install Invoice Ninja&lt;/h2&gt;

&lt;p&gt;Create a root directory for your application.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /srv/http/your_ninja_site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clone the project repository from GitHub:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/hillelcoren/invoice-ninja.git /srv/http/your_ininja_site
cd  /srv/http/your_ininja_site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install all dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;composer install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Set the environment to production:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp .env.example .env
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open the database.php file and edit the database settings &lt;code&gt;vim config/database.php&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;mysql&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; [
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;driver&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;mysql&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;database&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;ininja&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;ininjauser&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;ininjauser_passwd&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;charset&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;collation&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;utf8_unicode_ci&amp;#39;&lt;/span&gt;,
        &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color: #666666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
        ],
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;Run database migrations and seed the database with sample data:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php artisan migrate
php artisan db:seed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Generate a new application key:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php artisan key:generate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert the generated key in the configfile &lt;code&gt;vim config/app.php&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;key&#39; =&amp;gt; env(&#39;APP_KEY&#39;, &#39;2DAdHIDKts85n6hTX82mb4GrQpX2TXZ2&#39;),
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Wordpress: Artikel aufrufe erfassen ohne plugin</title>
      <link>/localhost/post/artikel-aufrufe-erfassen-ohne-plugin/</link>
      <pubDate>Wed, 13 Jun 2012 14:33:55 +0000</pubDate>
      <author>admin@calyrium.org (Sebastian Preisner)</author>
      <guid>/localhost/post/artikel-aufrufe-erfassen-ohne-plugin/</guid>
      <description>

&lt;p&gt;Aktuell habe ich versucht den Aufruf von Artikel ohne Plugins wie &lt;a href=&#34;http://wordpress.org/extend/plugins/wp-postviews/&#34; title=&#34;Link zum Plugin WP-PostViews&#34;&gt;WP-PostViews&lt;/a&gt; zu erfassen. Ich möchte die Artikelaufrufe zählen um in der Sidebar eine Liste der am häufigsten gelesenen Artikel ein zu fügen. Im folgenden habe ich mein Vorgehen erklärt.&lt;/p&gt;

&lt;p&gt;Auf der Hilfreichen Webseite &lt;a href=&#34;http://wpsnipp.com&#34; title=&#34;Wordpress Code Snippets&#34;&gt;WPsnipp.com&lt;/a&gt; habe ich den entsprechenden Codeschnipsel gefunden den ich zum Zählen der Aufrufe benötige (&lt;a href=&#34;http://wpsnipp.com/index.php/functions-php/track-post-views-without-a-plugin-using-post-meta/&#34;&gt;Wordpress Track post views without a plugin using post meta&lt;/a&gt;). Zum speichern der Anzahl nutze ich wie das Plugin die Benutzerdefinierten Felder wodurch ich ohne Probleme die Anzahl der aufrufe die bisher gezählt wurden übernehmen kann.&lt;/p&gt;

&lt;h2 id=&#34;zählen-der-artikelaufrufe:b69c920a2315af0eddb71bb9cc97f0d0&#34;&gt;Zählen der Artikelaufrufe&lt;/h2&gt;

&lt;p&gt;Der Folgende Code gehört in die functions.php deines Themes.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;// Funktion zur anzeigen der Aufrufe im Theme
function getPostViews($postID){
    $count_key = &#39;post_views_count&#39;; // Beim ersetzen des WP-PostView Plugin muss hier &amp;quot;views&amp;quot; stehen!
    $count = get_post_meta($postID, $count_key, true);
    if($count==&#39;&#39;){
        delete_post_meta($postID, $count_key);
        add_post_meta($postID, $count_key, &#39;0&#39;);
        return &amp;quot;0 View&amp;quot;;
    }
    return $count.&#39; Views&#39;;
}
// Funktion zum Zaehlen der Aufrufe
function setPostViews($postID) {
    $count_key = &#39;post_views_count&#39;; // Beim ersetzen des Plugin WP-PostViews muss hier &amp;quot;views&amp;quot; stehen!
    $count = get_post_meta($postID, $count_key, true);
    if($count==&#39;&#39;){
        $count = 0;
        delete_post_meta($postID, $count_key);
        add_post_meta($postID, $count_key, &#39;0&#39;);
    }else{
        $count++;
        update_post_meta($postID, $count_key, $count);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nun musst du noch in deiner single.php folgenden Code hinzufügen:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php setPostViews(get_the_ID()); //Zaehlt die Aufrufe des Artikels ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Um die Anzahl der Aufrufe in den Artikeln Anzuzeigen musst du an die gewünschte Stelle folgenden Code einfügen:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php echo getPostViews(get_the_ID()); // Anzeige der Aufrufe im Theme  ?--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nun werden die Aufrufe der Artikel gezählt. Möchtest du bestimmte Benutzergruppen von der Zählung ausschließen (z.B. die Administratoren) dann gelingt dir das mit Folgendem Code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php 
if ( ! current_user_can(&#39;administrator&#39;) ){ // Wenn der User nicht Administrator ist dann Zaehlen! 
    setPostViews(get_the_ID()); // Aufrufe Zaehlen  
}
?&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;anzeige-der-meist-gelesenen-artikel:b69c920a2315af0eddb71bb9cc97f0d0&#34;&gt;Anzeige der Meist gelesenen Artikel&lt;/h2&gt;

&lt;p&gt;Zur Anzeige der meist gelesen Artikel bietet sich die Sidebar an, daher habe ich hier den Code für ein kleines aber nützliches Widget welches man über die Pluginverwaltung einspielt und aktiviert.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
/*
   Plugin Name: Last_Month_Most_Viewed_Posts
   Plugin URI: http://calyrium.org
   Description: Dieses Plugin erstellt ein Widget für die WordPress Sidebar
   Author: Sebastian Preisner
   Version: 1.1
   Author URI: http://calyrium.org
 */

function most_view_display_widget($args) {
    extract($args);

    $tage = &#39;30&#39;;
    $artikel = &#39;5&#39;;
    // Filterfunktion erstellen
    function filter_where( $where = &#39;&#39; ) {
        // Artikel der letzten 30 Tage (xx days koennen beliebig geaendert werden.)
        $where .= &amp;quot; AND post_date &amp;gt; &#39;&amp;quot; . date(&#39;Y-m-d&#39;, strtotime(&#39;-$tage days&#39;)) . &amp;quot;&#39;&amp;quot;;
        return $where;
    }
    echo $before_widget;
    echo $before_title;?&amp;gt;Top $artikel der letzten $tage Tage&amp;lt;?php echo $after_title;
    echo &amp;quot;&amp;lt;ul&amp;gt;&amp;quot;;
    // Filter aktivieren
    add_filter( &#39;posts_where&#39;, &#39;filter_where&#39; );
    // Abfrage starten
    $query = new WP_Query( array(&#39;showposts&#39; =&amp;gt; &#39;$artikel&#39;, &#39;orderby&#39; =&amp;gt; &#39;meta_value_num&#39;, &#39;meta_key&#39; =&amp;gt; &#39;views&#39;, &#39;order&#39; =&amp;gt; &#39;DESC&#39;, &#39;category__not_in&#39; =&amp;gt; array(1799) ) );
    while ( $query-&amp;gt;have_posts() ) : $query-&amp;gt;the_post();
    $views = get_post_meta($post-&amp;gt;ID, &#39;views&#39;);
    echo &amp;quot;&amp;lt;li&amp;gt;&amp;quot;;
    echo &amp;quot;&amp;lt;a href=&#39;&amp;quot;; echo get_permalink(); echo &amp;quot;&#39;&amp;gt;&amp;quot;; echo get_the_title(); echo &amp;quot;&amp;lt;/a&amp;gt;&amp;quot;;
    echo &amp;quot;&amp;lt;/li&amp;gt;&amp;quot;;
    endwhile;
    echo &amp;quot;&amp;lt;/ul&amp;gt;&amp;quot;;
    echo $after_widget;
    // Filter deaktivieren (Wichtig!!)
    remove_filter( &#39;posts_where&#39;, &#39;filter_where&#39; );

    /**
     * Sanitize widget form values as they are saved.
     *
     * @see WP_Widget::update()
     *
     * @param array $new_instance Values just sent to be saved.
     * @param array $old_instance Previously saved values from database.
     *
     * @return array Updated safe values to be saved.
     *
     public function update( $new_instance, $old_instance ) {
     $instance = array();
     $instance[&#39;title&#39;] = strip_tags( $new_instance[&#39;title&#39;] );
     $instance[&#39;number&#39;] = strip_tags( $new_instance[&#39;number&#39;]);
     return $instance;
     }

    // Back-End Einstellungen
    public function form( $instance ) {
    if ( isset( $instance[ &#39;title&#39; ] ) ) {
    $title = $instance[ &#39;title&#39; ];
    }
    else {
    $title = __( &#39;New title&#39;, &#39;text_domain&#39; );
    }
    if (isset( $instance[ &#39;number&#39;] ) ) {
    $number = $instance[ &#39;number&#39; ];
    }
    else {
    $number = &#39;5&#39;;
    }
    ?&amp;gt;
    &amp;lt;p&amp;gt;
    &amp;lt;label for=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_id( &#39;title&#39; ); ?&amp;gt;&amp;quot;&amp;gt;&amp;lt;?php _e( &#39;Title:&#39; ); ?&amp;gt;&amp;lt;/label&amp;gt; 
    &amp;lt;input class=&amp;quot;widefat&amp;quot; id=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_id( &#39;title&#39; ); ?&amp;gt;&amp;quot; name=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_name( &#39;title&#39; ); ?&amp;gt;&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;&amp;lt;?php echo esc_attr( $title ); ?&amp;gt;&amp;quot; /&amp;gt;
    &amp;lt;label for=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_id( &#39;number&#39; ); ?&amp;gt;&amp;quot;&amp;gt;&amp;lt;?php _e( &#39;Anzahl:&#39; ); ?&amp;gt;&amp;lt;/label&amp;gt;
    &amp;lt;input class=&amp;quot;widefat&amp;quot; id=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_id( &#39;number&#39;); ?&amp;gt;&amp;quot; name=&amp;quot;&amp;lt;?php echo $this-&amp;gt;get_field_name( &#39;nubmber&#39;); ?&amp;gt;&amp;quot; type=&amp;quot;text&amp;quot; value=&amp;quot;&amp;lt;?php echo esc_attr( $number ); ?&amp;gt;&amp;quot; /&amp;gt;
    &amp;lt;/p&amp;gt;
    &amp;lt;?php 

    } */
}
wp_register_sidebar_widget(
        &#39;mostview_lastmonth_1&#39;,        // your unique widget id
        &#39;Most view last month&#39;,          // widget name
        &#39;most_view_display_widget&#39;,  // callback function
        array(                  // options
            &#39;description&#39; =&amp;gt; &#39;Zeigt die am häufigsten aufgerufenen Artikel des letzten Monats&#39;
            )
        );
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>